#importing the libraries
import numpy as np
import pandas as pd
from numpy import math

from sklearn.preprocessing import MinMaxScaler
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error
from sklearn.metrics import r2_score

import matplotlib.pyplot as plt

#importing the dataset
dataset = pd.read_csv('./dataset/insurance.csv', skipinitialspace=True)

#Create Dummy variables for the catgeorical variables region
dataset['southeast_region'] = np.where(dataset['region']=='southeast',1,0)
dataset['southwest_region'] = np.where(dataset['region']=='southwest',1,0)
dataset['northwest_region'] = np.where(dataset['region']=='northwest',1,0)
dataset['northeast_region'] = np.where(dataset['region']=='northeast',1,0)

#Drop the original column state from the datafrome
dataset.drop(columns=['region'],axis=1,inplace=True)

#Create Dummy variables for the catgeorical variables smoker
dataset['no_smoker'] = np.where(dataset['smoker']=='no',1,0)
dataset['yes_smoker'] = np.where(dataset['smoker']=='yes',1,0)

#Drop the original column state from the datafrome
dataset.drop(columns=['smoker'],axis=1,inplace=True)

#Create Dummy variables for the catgeorical variables sex
dataset['male_sex'] = np.where(dataset['sex']=='male',1,0)
dataset['female_sex'] = np.where(dataset['sex']=='female',1,0)

#Drop the original column state from the datafrome
dataset.drop(columns=['sex'],axis=1,inplace=True)

dependent_variable = 'charges'

#create a list of independent variables
independent_variables = dataset.columns.tolist()

independent_variables.remove(dependent_variable)

#create the data of independent variables
X = dataset[independent_variables].values

#create the data of dependent variable
y = dataset[dependent_variable].values

#splitting the dataset into the Training set and Test set
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 0)

#Transforming the data
scaler = MinMaxScaler()
X_train = scaler.fit_transform(X_train)
X_test = scaler.transform(X_test)

X_train[0:10]

# Fitting Multiple Linear Regression to the Training set
regressor = LinearRegression()
regressor.fit(X_train, y_train)

#prediciting the Test set results
y_pred = regressor.predict(X_test)

r2_score(y_test, y_pred)